// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// add_rows_bcf
NumericMatrix add_rows_bcf(NumericMatrix prior_tree_table_temp, int grow_node);
RcppExport SEXP _bcfbma_add_rows_bcf(SEXP prior_tree_table_tempSEXP, SEXP grow_nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_table_temp(prior_tree_table_tempSEXP);
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(add_rows_bcf(prior_tree_table_temp, grow_node));
    return rcpp_result_gen;
END_RCPP
}
// addcol_bcf
NumericMatrix addcol_bcf(NumericMatrix prior_tree_matrix_temp, int grow_node, NumericVector ld_obs, NumericVector rd_obs);
RcppExport SEXP _bcfbma_addcol_bcf(SEXP prior_tree_matrix_tempSEXP, SEXP grow_nodeSEXP, SEXP ld_obsSEXP, SEXP rd_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_matrix_temp(prior_tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ld_obs(ld_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd_obs(rd_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(addcol_bcf(prior_tree_matrix_temp, grow_node, ld_obs, rd_obs));
    return rcpp_result_gen;
END_RCPP
}
// set_daughter_to_end_tree_bcf
NumericMatrix set_daughter_to_end_tree_bcf(int grow_node, NumericMatrix prior_tree_table_temp, double left_daughter);
RcppExport SEXP _bcfbma_set_daughter_to_end_tree_bcf(SEXP grow_nodeSEXP, SEXP prior_tree_table_tempSEXP, SEXP left_daughterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_table_temp(prior_tree_table_tempSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    rcpp_result_gen = Rcpp::wrap(set_daughter_to_end_tree_bcf(grow_node, prior_tree_table_temp, left_daughter));
    return rcpp_result_gen;
END_RCPP
}
// set_daughter_to_end_mat_bcf
NumericMatrix set_daughter_to_end_mat_bcf(int d, NumericMatrix prior_tree_matrix_temp, double left_daughter, NumericVector ld_obs, NumericVector rd_obs);
RcppExport SEXP _bcfbma_set_daughter_to_end_mat_bcf(SEXP dSEXP, SEXP prior_tree_matrix_tempSEXP, SEXP left_daughterSEXP, SEXP ld_obsSEXP, SEXP rd_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_matrix_temp(prior_tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ld_obs(ld_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd_obs(rd_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(set_daughter_to_end_mat_bcf(d, prior_tree_matrix_temp, left_daughter, ld_obs, rd_obs));
    return rcpp_result_gen;
END_RCPP
}
// remove_zero_bcf
NumericVector remove_zero_bcf(NumericVector nodes_at_depth);
RcppExport SEXP _bcfbma_remove_zero_bcf(SEXP nodes_at_depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nodes_at_depth(nodes_at_depthSEXP);
    rcpp_result_gen = Rcpp::wrap(remove_zero_bcf(nodes_at_depth));
    return rcpp_result_gen;
END_RCPP
}
// order_intvec_bcf
IntegerVector order_intvec_bcf(IntegerVector x);
RcppExport SEXP _bcfbma_order_intvec_bcf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(order_intvec_bcf(x));
    return rcpp_result_gen;
END_RCPP
}
// get_gnp_bcf
NumericVector get_gnp_bcf(NumericVector nodes_at_depth, int grow_node);
RcppExport SEXP _bcfbma_get_gnp_bcf(SEXP nodes_at_depthSEXP, SEXP grow_nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nodes_at_depth(nodes_at_depthSEXP);
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_gnp_bcf(nodes_at_depth, grow_node));
    return rcpp_result_gen;
END_RCPP
}
// find_term_nodes_bcf
NumericVector find_term_nodes_bcf(NumericMatrix tree_table);
RcppExport SEXP _bcfbma_find_term_nodes_bcf(SEXP tree_tableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table(tree_tableSEXP);
    rcpp_result_gen = Rcpp::wrap(find_term_nodes_bcf(tree_table));
    return rcpp_result_gen;
END_RCPP
}
// find_term_obs_bcf
arma::uvec find_term_obs_bcf(NumericMatrix tree_matrix_temp, double terminal_node);
RcppExport SEXP _bcfbma_find_term_obs_bcf(SEXP tree_matrix_tempSEXP, SEXP terminal_nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix_temp(tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type terminal_node(terminal_nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(find_term_obs_bcf(tree_matrix_temp, terminal_node));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_function_mu_bcf
double likelihood_function_mu_bcf(NumericVector y_temp, NumericMatrix treetable_temp, NumericMatrix obs_to_nodes_temp, double a, double mu, double nu, double lambda);
RcppExport SEXP _bcfbma_likelihood_function_mu_bcf(SEXP y_tempSEXP, SEXP treetable_tempSEXP, SEXP obs_to_nodes_tempSEXP, SEXP aSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable_temp(treetable_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_temp(obs_to_nodes_tempSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_function_mu_bcf(y_temp, treetable_temp, obs_to_nodes_temp, a, mu, nu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_function_bcf
double likelihood_function_bcf(NumericVector y_temp, NumericMatrix treetable_temp, NumericMatrix obs_to_nodes_temp, double a, double mu, double nu, double lambda);
RcppExport SEXP _bcfbma_likelihood_function_bcf(SEXP y_tempSEXP, SEXP treetable_tempSEXP, SEXP obs_to_nodes_tempSEXP, SEXP aSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable_temp(treetable_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_temp(obs_to_nodes_tempSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_function_bcf(y_temp, treetable_temp, obs_to_nodes_temp, a, mu, nu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// find_internal_nodes_bcf
arma::uvec find_internal_nodes_bcf(NumericMatrix treetable);
RcppExport SEXP _bcfbma_find_internal_nodes_bcf(SEXP treetableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable(treetableSEXP);
    rcpp_result_gen = Rcpp::wrap(find_internal_nodes_bcf(treetable));
    return rcpp_result_gen;
END_RCPP
}
// find_prev_nonterm_bcf
double find_prev_nonterm_bcf(arma::uvec find_nonterm, NumericVector prev);
RcppExport SEXP _bcfbma_find_prev_nonterm_bcf(SEXP find_nontermSEXP, SEXP prevSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type find_nonterm(find_nontermSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prev(prevSEXP);
    rcpp_result_gen = Rcpp::wrap(find_prev_nonterm_bcf(find_nonterm, prev));
    return rcpp_result_gen;
END_RCPP
}
// find_nodes_to_update_bcf
arma::uvec find_nodes_to_update_bcf(arma::uvec all_ld, double left_daughter);
RcppExport SEXP _bcfbma_find_nodes_to_update_bcf(SEXP all_ldSEXP, SEXP left_daughterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type all_ld(all_ldSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    rcpp_result_gen = Rcpp::wrap(find_nodes_to_update_bcf(all_ld, left_daughter));
    return rcpp_result_gen;
END_RCPP
}
// set_tree_to_middle_bcf
NumericMatrix set_tree_to_middle_bcf(NumericVector node_to_update, NumericMatrix prior_tree_table_temp, int grow_node, double left_daughter);
RcppExport SEXP _bcfbma_set_tree_to_middle_bcf(SEXP node_to_updateSEXP, SEXP prior_tree_table_tempSEXP, SEXP grow_nodeSEXP, SEXP left_daughterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type node_to_update(node_to_updateSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_table_temp(prior_tree_table_tempSEXP);
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    rcpp_result_gen = Rcpp::wrap(set_tree_to_middle_bcf(node_to_update, prior_tree_table_temp, grow_node, left_daughter));
    return rcpp_result_gen;
END_RCPP
}
// update_grow_obs_bcf
NumericMatrix update_grow_obs_bcf(NumericMatrix prior_tree_matrix_temp, double grow_node, double left_daughter, int d, NumericVector ld_obs, NumericVector rd_obs);
RcppExport SEXP _bcfbma_update_grow_obs_bcf(SEXP prior_tree_matrix_tempSEXP, SEXP grow_nodeSEXP, SEXP left_daughterSEXP, SEXP dSEXP, SEXP ld_obsSEXP, SEXP rd_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_matrix_temp(prior_tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type grow_node(grow_nodeSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ld_obs(ld_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd_obs(rd_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(update_grow_obs_bcf(prior_tree_matrix_temp, grow_node, left_daughter, d, ld_obs, rd_obs));
    return rcpp_result_gen;
END_RCPP
}
// find_obs_to_update_grow_bcf
NumericMatrix find_obs_to_update_grow_bcf(NumericMatrix prior_tree_matrix_temp, double left_daughter, int d, NumericVector ld_obs, NumericVector rd_obs);
RcppExport SEXP _bcfbma_find_obs_to_update_grow_bcf(SEXP prior_tree_matrix_tempSEXP, SEXP left_daughterSEXP, SEXP dSEXP, SEXP ld_obsSEXP, SEXP rd_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_matrix_temp(prior_tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type left_daughter(left_daughterSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ld_obs(ld_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd_obs(rd_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(find_obs_to_update_grow_bcf(prior_tree_matrix_temp, left_daughter, d, ld_obs, rd_obs));
    return rcpp_result_gen;
END_RCPP
}
// get_daughter_obs_bcf
List get_daughter_obs_bcf(arma::mat& xmat, NumericVector obs_to_update, int split_var, double split_point);
RcppExport SEXP _bcfbma_get_daughter_obs_bcf(SEXP xmatSEXP, SEXP obs_to_updateSEXP, SEXP split_varSEXP, SEXP split_pointSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xmat(xmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type obs_to_update(obs_to_updateSEXP);
    Rcpp::traits::input_parameter< int >::type split_var(split_varSEXP);
    Rcpp::traits::input_parameter< double >::type split_point(split_pointSEXP);
    rcpp_result_gen = Rcpp::wrap(get_daughter_obs_bcf(xmat, obs_to_update, split_var, split_point));
    return rcpp_result_gen;
END_RCPP
}
// find_term_cols_bcf
int find_term_cols_bcf(NumericMatrix tree_matrix_temp, int terminal_node);
RcppExport SEXP _bcfbma_find_term_cols_bcf(SEXP tree_matrix_tempSEXP, SEXP terminal_nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix_temp(tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< int >::type terminal_node(terminal_nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(find_term_cols_bcf(tree_matrix_temp, terminal_node));
    return rcpp_result_gen;
END_RCPP
}
// get_grow_obs_bcf
NumericVector get_grow_obs_bcf(arma::mat& xmat, NumericVector grow_obs, int split_var);
RcppExport SEXP _bcfbma_get_grow_obs_bcf(SEXP xmatSEXP, SEXP grow_obsSEXP, SEXP split_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xmat(xmatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grow_obs(grow_obsSEXP);
    Rcpp::traits::input_parameter< int >::type split_var(split_varSEXP);
    rcpp_result_gen = Rcpp::wrap(get_grow_obs_bcf(xmat, grow_obs, split_var));
    return rcpp_result_gen;
END_RCPP
}
// get_grow_obs_in_z_bcf
arma::uvec get_grow_obs_in_z_bcf(arma::vec& z_ar, NumericVector grow_obs);
RcppExport SEXP _bcfbma_get_grow_obs_in_z_bcf(SEXP z_arSEXP, SEXP grow_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type z_ar(z_arSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grow_obs(grow_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_grow_obs_in_z_bcf(z_ar, grow_obs));
    return rcpp_result_gen;
END_RCPP
}
// grow_tree_bcf
List grow_tree_bcf(arma::mat& xmat, NumericMatrix prior_tree_matrix, int grow_node, NumericMatrix prior_tree_table, int splitvar, double splitpoint, NumericVector grow_obs, int d);
RcppExport SEXP _bcfbma_grow_tree_bcf(SEXP xmatSEXP, SEXP prior_tree_matrixSEXP, SEXP grow_nodeSEXP, SEXP prior_tree_tableSEXP, SEXP splitvarSEXP, SEXP splitpointSEXP, SEXP grow_obsSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xmat(xmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_matrix(prior_tree_matrixSEXP);
    Rcpp::traits::input_parameter< int >::type grow_node(grow_nodeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prior_tree_table(prior_tree_tableSEXP);
    Rcpp::traits::input_parameter< int >::type splitvar(splitvarSEXP);
    Rcpp::traits::input_parameter< double >::type splitpoint(splitpointSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grow_obs(grow_obsSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(grow_tree_bcf(xmat, prior_tree_matrix, grow_node, prior_tree_table, splitvar, splitpoint, grow_obs, d));
    return rcpp_result_gen;
END_RCPP
}
// set_daughter_bcf
NumericMatrix set_daughter_bcf(int left_daughter, int right_daughter, IntegerVector ld_obs, IntegerVector rd_obs, NumericMatrix tree_matrix_temp, double term_cols);
RcppExport SEXP _bcfbma_set_daughter_bcf(SEXP left_daughterSEXP, SEXP right_daughterSEXP, SEXP ld_obsSEXP, SEXP rd_obsSEXP, SEXP tree_matrix_tempSEXP, SEXP term_colsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type left_daughter(left_daughterSEXP);
    Rcpp::traits::input_parameter< int >::type right_daughter(right_daughterSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ld_obs(ld_obsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rd_obs(rd_obsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix_temp(tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type term_cols(term_colsSEXP);
    rcpp_result_gen = Rcpp::wrap(set_daughter_bcf(left_daughter, right_daughter, ld_obs, rd_obs, tree_matrix_temp, term_cols));
    return rcpp_result_gen;
END_RCPP
}
// order__bcf
IntegerVector order__bcf(NumericVector x);
RcppExport SEXP _bcfbma_order__bcf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(order__bcf(x));
    return rcpp_result_gen;
END_RCPP
}
// orderforOW__bcf
IntegerVector orderforOW__bcf(NumericVector x);
RcppExport SEXP _bcfbma_orderforOW__bcf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(orderforOW__bcf(x));
    return rcpp_result_gen;
END_RCPP
}
// secondKindStirlingNumber
double secondKindStirlingNumber(int n, int k);
RcppExport SEXP _bcfbma_secondKindStirlingNumber(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(secondKindStirlingNumber(n, k));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_prior_bcf
double get_tree_prior_bcf(double spike_tree, int s_t_hyperprior, double p_s_t, double a_s_t, double b_s_t, double num_obs, double num_vars, double lambda_poisson, NumericMatrix tree_table, NumericMatrix tree_matrix, double alpha, double beta);
RcppExport SEXP _bcfbma_get_tree_prior_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_tSEXP, SEXP a_s_tSEXP, SEXP b_s_tSEXP, SEXP num_obsSEXP, SEXP num_varsSEXP, SEXP lambda_poissonSEXP, SEXP tree_tableSEXP, SEXP tree_matrixSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t(p_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t(a_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t(b_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars(num_varsSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson(lambda_poissonSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table(tree_tableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix(tree_matrixSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_prior_bcf(spike_tree, s_t_hyperprior, p_s_t, a_s_t, b_s_t, num_obs, num_vars, lambda_poisson, tree_table, tree_matrix, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// start_tree_bcf
NumericMatrix start_tree_bcf(double start_mean, double start_sd);
RcppExport SEXP _bcfbma_start_tree_bcf(SEXP start_meanSEXP, SEXP start_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type start_mean(start_meanSEXP);
    Rcpp::traits::input_parameter< double >::type start_sd(start_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(start_tree_bcf(start_mean, start_sd));
    return rcpp_result_gen;
END_RCPP
}
// start_tree2_bcf
NumericMatrix start_tree2_bcf();
RcppExport SEXP _bcfbma_start_tree2_bcf() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(start_tree2_bcf());
    return rcpp_result_gen;
END_RCPP
}
// start_matrix_bcf
NumericMatrix start_matrix_bcf(int n);
RcppExport SEXP _bcfbma_start_matrix_bcf(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(start_matrix_bcf(n));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_model_occams_window_bcf
List evaluate_model_occams_window_bcf(NumericVector tree_lik, double lowest_BIC, double c, List tree_list, List tree_mat_list, IntegerVector tree_parent);
RcppExport SEXP _bcfbma_evaluate_model_occams_window_bcf(SEXP tree_likSEXP, SEXP lowest_BICSEXP, SEXP cSEXP, SEXP tree_listSEXP, SEXP tree_mat_listSEXP, SEXP tree_parentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tree_lik(tree_likSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_list(tree_mat_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type tree_parent(tree_parentSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_model_occams_window_bcf(tree_lik, lowest_BIC, c, tree_list, tree_mat_list, tree_parent));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_model_occams_window_exact_bcf
List evaluate_model_occams_window_exact_bcf(NumericVector tree_lik, double lowest_BIC, double c, List tree_list, List tree_mat_list, IntegerVector tree_parent, List tree_pred_list);
RcppExport SEXP _bcfbma_evaluate_model_occams_window_exact_bcf(SEXP tree_likSEXP, SEXP lowest_BICSEXP, SEXP cSEXP, SEXP tree_listSEXP, SEXP tree_mat_listSEXP, SEXP tree_parentSEXP, SEXP tree_pred_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tree_lik(tree_likSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_list(tree_mat_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type tree_parent(tree_parentSEXP);
    Rcpp::traits::input_parameter< List >::type tree_pred_list(tree_pred_listSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_model_occams_window_exact_bcf(tree_lik, lowest_BIC, c, tree_list, tree_mat_list, tree_parent, tree_pred_list));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_model_OW_fusedlists_bcf
List evaluate_model_OW_fusedlists_bcf(IntegerVector curr_round_added_mu_addall, NumericVector tree_lik, double lowest_BIC, double c, List tree_list, List tree_mat_list, IntegerVector tree_parent, NumericMatrix curr_round_preds, NumericMatrix curr_round_test_preds, bool is_test_data);
RcppExport SEXP _bcfbma_evaluate_model_OW_fusedlists_bcf(SEXP curr_round_added_mu_addallSEXP, SEXP tree_likSEXP, SEXP lowest_BICSEXP, SEXP cSEXP, SEXP tree_listSEXP, SEXP tree_mat_listSEXP, SEXP tree_parentSEXP, SEXP curr_round_predsSEXP, SEXP curr_round_test_predsSEXP, SEXP is_test_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type curr_round_added_mu_addall(curr_round_added_mu_addallSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tree_lik(tree_likSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_list(tree_mat_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type tree_parent(tree_parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type curr_round_preds(curr_round_predsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type curr_round_test_preds(curr_round_test_predsSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_model_OW_fusedlists_bcf(curr_round_added_mu_addall, tree_lik, lowest_BIC, c, tree_list, tree_mat_list, tree_parent, curr_round_preds, curr_round_test_preds, is_test_data));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_model_OW_fusedlists_exact_bcf
List evaluate_model_OW_fusedlists_exact_bcf(IntegerVector curr_round_added_mu_addall, NumericVector tree_lik, double lowest_BIC, double c, List tree_list, List tree_mat_list, IntegerVector tree_parent, NumericMatrix curr_round_preds, NumericMatrix curr_round_test_preds, NumericMatrix curr_true_preds, bool is_test_data);
RcppExport SEXP _bcfbma_evaluate_model_OW_fusedlists_exact_bcf(SEXP curr_round_added_mu_addallSEXP, SEXP tree_likSEXP, SEXP lowest_BICSEXP, SEXP cSEXP, SEXP tree_listSEXP, SEXP tree_mat_listSEXP, SEXP tree_parentSEXP, SEXP curr_round_predsSEXP, SEXP curr_round_test_predsSEXP, SEXP curr_true_predsSEXP, SEXP is_test_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type curr_round_added_mu_addall(curr_round_added_mu_addallSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tree_lik(tree_likSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_list(tree_mat_listSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type tree_parent(tree_parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type curr_round_preds(curr_round_predsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type curr_round_test_preds(curr_round_test_predsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type curr_true_preds(curr_true_predsSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_model_OW_fusedlists_exact_bcf(curr_round_added_mu_addall, tree_lik, lowest_BIC, c, tree_list, tree_mat_list, tree_parent, curr_round_preds, curr_round_test_preds, curr_true_preds, is_test_data));
    return rcpp_result_gen;
END_RCPP
}
// get_testdata_term_obs_bcf
NumericVector get_testdata_term_obs_bcf(NumericMatrix test_data, NumericMatrix tree_data, NumericVector term_node_means);
RcppExport SEXP _bcfbma_get_testdata_term_obs_bcf(SEXP test_dataSEXP, SEXP tree_dataSEXP, SEXP term_node_meansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type term_node_means(term_node_meansSEXP);
    rcpp_result_gen = Rcpp::wrap(get_testdata_term_obs_bcf(test_data, tree_data, term_node_means));
    return rcpp_result_gen;
END_RCPP
}
// get_initial_resids
List get_initial_resids(NumericMatrix test_data, NumericMatrix pihatdata, List List_of_lists_tree_tables_mu, List List_of_lists_tree_tables_tau, NumericVector ytrain, NumericVector ztrain);
RcppExport SEXP _bcfbma_get_initial_resids(SEXP test_dataSEXP, SEXP pihatdataSEXP, SEXP List_of_lists_tree_tables_muSEXP, SEXP List_of_lists_tree_tables_tauSEXP, SEXP ytrainSEXP, SEXP ztrainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pihatdata(pihatdataSEXP);
    Rcpp::traits::input_parameter< List >::type List_of_lists_tree_tables_mu(List_of_lists_tree_tables_muSEXP);
    Rcpp::traits::input_parameter< List >::type List_of_lists_tree_tables_tau(List_of_lists_tree_tables_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ytrain(ytrainSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ztrain(ztrainSEXP);
    rcpp_result_gen = Rcpp::wrap(get_initial_resids(test_data, pihatdata, List_of_lists_tree_tables_mu, List_of_lists_tree_tables_tau, ytrain, ztrain));
    return rcpp_result_gen;
END_RCPP
}
// resize_bcf
List resize_bcf(const List& x, int n);
RcppExport SEXP _bcfbma_resize_bcf(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(resize_bcf(x, n));
    return rcpp_result_gen;
END_RCPP
}
// resize_bigger_bcf
List resize_bigger_bcf(const List& x, int n);
RcppExport SEXP _bcfbma_resize_bigger_bcf(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(resize_bigger_bcf(x, n));
    return rcpp_result_gen;
END_RCPP
}
// J_bcf
arma::mat J_bcf(NumericMatrix obs_to_nodes_temp, NumericVector tree_term_nodes);
RcppExport SEXP _bcfbma_J_bcf(SEXP obs_to_nodes_tempSEXP, SEXP tree_term_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_temp(obs_to_nodes_tempSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tree_term_nodes(tree_term_nodesSEXP);
    rcpp_result_gen = Rcpp::wrap(J_bcf(obs_to_nodes_temp, tree_term_nodes));
    return rcpp_result_gen;
END_RCPP
}
// mu_vector_bcf
NumericVector mu_vector_bcf(List sum_treetable, int n);
RcppExport SEXP _bcfbma_mu_vector_bcf(SEXP sum_treetableSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type sum_treetable(sum_treetableSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(mu_vector_bcf(sum_treetable, n));
    return rcpp_result_gen;
END_RCPP
}
// W_bcf
arma::mat W_bcf(List sum_treetable, List sum_obs_to_nodes, int n);
RcppExport SEXP _bcfbma_W_bcf(SEXP sum_treetableSEXP, SEXP sum_obs_to_nodesSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type sum_treetable(sum_treetableSEXP);
    Rcpp::traits::input_parameter< List >::type sum_obs_to_nodes(sum_obs_to_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(W_bcf(sum_treetable, sum_obs_to_nodes, n));
    return rcpp_result_gen;
END_RCPP
}
// W_tauround1_bcf
arma::mat W_tauround1_bcf(NumericMatrix treetable, NumericMatrix obs_to_nodes, int n);
RcppExport SEXP _bcfbma_W_tauround1_bcf(SEXP treetableSEXP, SEXP obs_to_nodesSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable(treetableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes(obs_to_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(W_tauround1_bcf(treetable, obs_to_nodes, n));
    return rcpp_result_gen;
END_RCPP
}
// likelihood_function_exact_bcf
List likelihood_function_exact_bcf(NumericVector y_temp, NumericMatrix treetable_temp, NumericMatrix obs_to_nodes_temp, double a, double mu, double nu, double lambda);
RcppExport SEXP _bcfbma_likelihood_function_exact_bcf(SEXP y_tempSEXP, SEXP treetable_tempSEXP, SEXP obs_to_nodes_tempSEXP, SEXP aSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable_temp(treetable_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_temp(obs_to_nodes_tempSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_function_exact_bcf(y_temp, treetable_temp, obs_to_nodes_temp, a, mu, nu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// sumtree_likelihood_function_bcf_bcf
double sumtree_likelihood_function_bcf_bcf(NumericVector y_temp, List sum_treetable_mu, List sum_treetable_tau, List sum_obs_to_nodes_mu, List sum_obs_to_nodes_tau, int n, double a_mu, double a_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_sumtree_likelihood_function_bcf_bcf(SEXP y_tempSEXP, SEXP sum_treetable_muSEXP, SEXP sum_treetable_tauSEXP, SEXP sum_obs_to_nodes_muSEXP, SEXP sum_obs_to_nodes_tauSEXP, SEXP nSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< List >::type sum_treetable_mu(sum_treetable_muSEXP);
    Rcpp::traits::input_parameter< List >::type sum_treetable_tau(sum_treetable_tauSEXP);
    Rcpp::traits::input_parameter< List >::type sum_obs_to_nodes_mu(sum_obs_to_nodes_muSEXP);
    Rcpp::traits::input_parameter< List >::type sum_obs_to_nodes_tau(sum_obs_to_nodes_tauSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(sumtree_likelihood_function_bcf_bcf(y_temp, sum_treetable_mu, sum_treetable_tau, sum_obs_to_nodes_mu, sum_obs_to_nodes_tau, n, a_mu, a_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// sumtree_likelihood_function_exact_bcf
List sumtree_likelihood_function_exact_bcf(NumericVector y_temp, List sum_treetable_mu, List sum_treetable_tau, List sum_obs_to_nodes_mu, List sum_obs_to_nodes_tau, int n, double a_mu, double a_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_sumtree_likelihood_function_exact_bcf(SEXP y_tempSEXP, SEXP sum_treetable_muSEXP, SEXP sum_treetable_tauSEXP, SEXP sum_obs_to_nodes_muSEXP, SEXP sum_obs_to_nodes_tauSEXP, SEXP nSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< List >::type sum_treetable_mu(sum_treetable_muSEXP);
    Rcpp::traits::input_parameter< List >::type sum_treetable_tau(sum_treetable_tauSEXP);
    Rcpp::traits::input_parameter< List >::type sum_obs_to_nodes_mu(sum_obs_to_nodes_muSEXP);
    Rcpp::traits::input_parameter< List >::type sum_obs_to_nodes_tau(sum_obs_to_nodes_tauSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(sumtree_likelihood_function_exact_bcf(y_temp, sum_treetable_mu, sum_treetable_tau, sum_obs_to_nodes_mu, sum_obs_to_nodes_tau, n, a_mu, a_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// sumtree_likelihood_tau_round1_bcf
double sumtree_likelihood_tau_round1_bcf(NumericVector y_temp, NumericMatrix treetable_tau, NumericMatrix obs_to_nodes_tau, int n, double a_mu, double a_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_sumtree_likelihood_tau_round1_bcf(SEXP y_tempSEXP, SEXP treetable_tauSEXP, SEXP obs_to_nodes_tauSEXP, SEXP nSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable_tau(treetable_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_tau(obs_to_nodes_tauSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(sumtree_likelihood_tau_round1_bcf(y_temp, treetable_tau, obs_to_nodes_tau, n, a_mu, a_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// sumtree_likelihood_tau_round1_exact_bcf
List sumtree_likelihood_tau_round1_exact_bcf(NumericVector y_temp, NumericMatrix treetable_tau, NumericMatrix obs_to_nodes_tau, int n, double a_mu, double a_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_sumtree_likelihood_tau_round1_exact_bcf(SEXP y_tempSEXP, SEXP treetable_tauSEXP, SEXP obs_to_nodes_tauSEXP, SEXP nSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_temp(y_tempSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable_tau(treetable_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type obs_to_nodes_tau(obs_to_nodes_tauSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(sumtree_likelihood_tau_round1_exact_bcf(y_temp, treetable_tau, obs_to_nodes_tau, n, a_mu, a_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_mu_bcf
List get_best_split_mu_bcf(double spike_tree, int s_t_hyperprior, double p_s_t, double a_s_t, double b_s_t, double num_obs, double num_vars, double lambda_poisson, NumericVector resids, arma::mat& data, NumericMatrix treetable, NumericMatrix tree_mat, double a, double mu, double nu, double lambda, double c, double lowest_BIC, int parent, NumericMatrix cp_mat, double alpha, double beta, int maxOWsize, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_mu_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_tSEXP, SEXP a_s_tSEXP, SEXP b_s_tSEXP, SEXP num_obsSEXP, SEXP num_varsSEXP, SEXP lambda_poissonSEXP, SEXP residsSEXP, SEXP dataSEXP, SEXP treetableSEXP, SEXP tree_matSEXP, SEXP aSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP maxOWsizeSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t(p_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t(a_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t(b_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars(num_varsSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson(lambda_poissonSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable(treetableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat(tree_matSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_mat(cp_matSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_mu_bcf(spike_tree, s_t_hyperprior, p_s_t, a_s_t, b_s_t, num_obs, num_vars, lambda_poisson, resids, data, treetable, tree_mat, a, mu, nu, lambda, c, lowest_BIC, parent, cp_mat, alpha, beta, maxOWsize, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_mu_update_bcf
List get_best_split_mu_update_bcf(double spike_tree, int s_t_hyperprior, double p_s_t, double a_s_t, double b_s_t, double num_obs, double num_vars, double lambda_poisson, NumericVector resids, arma::mat& data, NumericMatrix treetable, NumericMatrix tree_mat, double a, double mu, double nu, double lambda, double c, double lowest_BIC, int parent, List cp_matlist, double alpha, double beta, int maxOWsize, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_mu_update_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_tSEXP, SEXP a_s_tSEXP, SEXP b_s_tSEXP, SEXP num_obsSEXP, SEXP num_varsSEXP, SEXP lambda_poissonSEXP, SEXP residsSEXP, SEXP dataSEXP, SEXP treetableSEXP, SEXP tree_matSEXP, SEXP aSEXP, SEXP muSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matlistSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP maxOWsizeSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t(p_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t(a_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t(b_s_tSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars(num_varsSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson(lambda_poissonSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable(treetableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat(tree_matSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type cp_matlist(cp_matlistSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_mu_update_bcf(spike_tree, s_t_hyperprior, p_s_t, a_s_t, b_s_t, num_obs, num_vars, lambda_poisson, resids, data, treetable, tree_mat, a, mu, nu, lambda, c, lowest_BIC, parent, cp_matlist, alpha, beta, maxOWsize, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_tau_bcf
List get_best_split_tau_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, NumericMatrix cp_mat, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_tau_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_mu_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu_mu(b_s_t_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_mat(cp_matSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_tau_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_mat, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_tau_update_bcf
List get_best_split_tau_update_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, List cp_matlist, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_tau_update_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matlistSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type cp_matlist(cp_matlistSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_tau_update_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_matlist, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_tau_round1_bcf
List get_best_split_tau_round1_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, NumericMatrix cp_mat, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_mat_mu, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_tau_round1_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_mat(cp_matSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_tau_round1_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_mat, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_mat_mu, y_scaled, parent2, i, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_tau_round1_update_bcf
List get_best_split_tau_round1_update_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, List cp_matlist, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_mat_mu, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_tau_round1_update_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matlistSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type cp_matlist(cp_matlistSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_tau_round1_update_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_matlist, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_mat_mu, y_scaled, parent2, i, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_sum_tau_bcf
List get_best_split_sum_tau_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, NumericMatrix cp_mat, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_sum_tau_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_mat(cp_matSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_sum_tau_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_mat, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, parent2, i, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_sum_tau_update_bcf
List get_best_split_sum_tau_update_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_moderate_a, NumericMatrix tree_table_tau, NumericMatrix tree_mat_tau, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, List cp_matlist, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_sum_tau_update_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_moderate_aSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matlistSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type cp_matlist(cp_matlistSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_sum_tau_update_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_moderate_a, tree_table_tau, tree_mat_tau, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_matlist, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, parent2, i, z, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_sum_mu_bcf
List get_best_split_sum_mu_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_control_a, NumericMatrix tree_table_mu, NumericMatrix tree_mat_mu, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, NumericMatrix cp_mat, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_sum_mu_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_control_aSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_mat(cp_matSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_sum_mu_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_control_a, tree_table_mu, tree_mat_mu, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_mat, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, parent2, i, z, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_split_sum_mu_update_bcf
List get_best_split_sum_mu_update_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, NumericVector resids, arma::mat& x_control_a, NumericMatrix tree_table_mu, NumericMatrix tree_mat_mu, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double lowest_BIC, int parent, List cp_matlist, double alpha_mu, double beta_mu, double alpha_tau, double beta_tau, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, IntegerVector parent2, int i, NumericVector z, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_split_sum_mu_update_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP residsSEXP, SEXP x_control_aSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP cp_matlistSEXP, SEXP alpha_muSEXP, SEXP beta_muSEXP, SEXP alpha_tauSEXP, SEXP beta_tauSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP parent2SEXP, SEXP iSEXP, SEXP zSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< int >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type cp_matlist(cp_matlistSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_split_sum_mu_update_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, resids, x_control_a, tree_table_mu, tree_mat_mu, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, lowest_BIC, parent, cp_matlist, alpha_mu, beta_mu, alpha_tau, beta_tau, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, parent2, i, z, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// update_mean_var_bcf
NumericVector update_mean_var_bcf(NumericMatrix tree_table, NumericMatrix tree_matrix, NumericVector resids, double a);
RcppExport SEXP _bcfbma_update_mean_var_bcf(SEXP tree_tableSEXP, SEXP tree_matrixSEXP, SEXP residsSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table(tree_tableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix(tree_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(update_mean_var_bcf(tree_table, tree_matrix, resids, a));
    return rcpp_result_gen;
END_RCPP
}
// update_predictions_bcf
List update_predictions_bcf(NumericMatrix tree_table, NumericMatrix tree_matrix, NumericVector new_mean, int n);
RcppExport SEXP _bcfbma_update_predictions_bcf(SEXP tree_tableSEXP, SEXP tree_matrixSEXP, SEXP new_meanSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table(tree_tableSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix(tree_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type new_mean(new_meanSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(update_predictions_bcf(tree_table, tree_matrix, new_mean, n));
    return rcpp_result_gen;
END_RCPP
}
// subsetter_bcf
NumericVector subsetter_bcf(NumericVector a, LogicalVector b);
RcppExport SEXP _bcfbma_subsetter_bcf(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(subsetter_bcf(a, b));
    return rcpp_result_gen;
END_RCPP
}
// order_inc__bcf
IntegerVector order_inc__bcf(NumericVector x);
RcppExport SEXP _bcfbma_order_inc__bcf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(order_inc__bcf(x));
    return rcpp_result_gen;
END_RCPP
}
// min_which2_bcf
List min_which2_bcf(NumericVector array, int n, double minout, int whichout);
RcppExport SEXP _bcfbma_min_which2_bcf(SEXP arraySEXP, SEXP nSEXP, SEXP minoutSEXP, SEXP whichoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type array(arraySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type minout(minoutSEXP);
    Rcpp::traits::input_parameter< int >::type whichout(whichoutSEXP);
    rcpp_result_gen = Rcpp::wrap(min_which2_bcf(array, n, minout, whichout));
    return rcpp_result_gen;
END_RCPP
}
// mll_meanvar2_bcf
double mll_meanvar2_bcf(double x, double x2, int n);
RcppExport SEXP _bcfbma_mll_meanvar2_bcf(SEXP xSEXP, SEXP x2SEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(mll_meanvar2_bcf(x, x2, n));
    return rcpp_result_gen;
END_RCPP
}
// PELT_meanvar_norm2_bcf
IntegerVector PELT_meanvar_norm2_bcf(NumericVector resp, double pen);
RcppExport SEXP _bcfbma_PELT_meanvar_norm2_bcf(SEXP respSEXP, SEXP penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< double >::type pen(penSEXP);
    rcpp_result_gen = Rcpp::wrap(PELT_meanvar_norm2_bcf(resp, pen));
    return rcpp_result_gen;
END_RCPP
}
// SS_bcf
double SS_bcf(arma::vec x, arma::vec y, double split);
RcppExport SEXP _bcfbma_SS_bcf(SEXP xSEXP, SEXP ySEXP, SEXP splitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type split(splitSEXP);
    rcpp_result_gen = Rcpp::wrap(SS_bcf(x, y, split));
    return rcpp_result_gen;
END_RCPP
}
// gridCP_bcf
List gridCP_bcf(arma::vec x, arma::vec y, int gridSize);
RcppExport SEXP _bcfbma_gridCP_bcf(SEXP xSEXP, SEXP ySEXP, SEXP gridSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type gridSize(gridSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(gridCP_bcf(x, y, gridSize));
    return rcpp_result_gen;
END_RCPP
}
// make_gridpoint_cpmat_mu_bcf
List make_gridpoint_cpmat_mu_bcf(NumericMatrix data, NumericVector resp, int gridsize, int num_cp);
RcppExport SEXP _bcfbma_make_gridpoint_cpmat_mu_bcf(SEXP dataSEXP, SEXP respSEXP, SEXP gridsizeSEXP, SEXP num_cpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize(gridsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp(num_cpSEXP);
    rcpp_result_gen = Rcpp::wrap(make_gridpoint_cpmat_mu_bcf(data, resp, gridsize, num_cp));
    return rcpp_result_gen;
END_RCPP
}
// make_gridpoint_cpmat_tau_bcf
List make_gridpoint_cpmat_tau_bcf(NumericMatrix data, NumericVector resp, int gridsize, int num_cp, NumericVector z);
RcppExport SEXP _bcfbma_make_gridpoint_cpmat_tau_bcf(SEXP dataSEXP, SEXP respSEXP, SEXP gridsizeSEXP, SEXP num_cpSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize(gridsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp(num_cpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(make_gridpoint_cpmat_tau_bcf(data, resp, gridsize, num_cp, z));
    return rcpp_result_gen;
END_RCPP
}
// make_pelt_cpmat_mu_bcf
List make_pelt_cpmat_mu_bcf(NumericMatrix data, NumericVector resp, double pen, int num_cp);
RcppExport SEXP _bcfbma_make_pelt_cpmat_mu_bcf(SEXP dataSEXP, SEXP respSEXP, SEXP penSEXP, SEXP num_cpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< double >::type pen(penSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp(num_cpSEXP);
    rcpp_result_gen = Rcpp::wrap(make_pelt_cpmat_mu_bcf(data, resp, pen, num_cp));
    return rcpp_result_gen;
END_RCPP
}
// make_pelt_cpmat_tau_bcf
List make_pelt_cpmat_tau_bcf(NumericMatrix data, NumericVector resp, double pen, int num_cp, NumericVector z);
RcppExport SEXP _bcfbma_make_pelt_cpmat_tau_bcf(SEXP dataSEXP, SEXP respSEXP, SEXP penSEXP, SEXP num_cpSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resp(respSEXP);
    Rcpp::traits::input_parameter< double >::type pen(penSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp(num_cpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(make_pelt_cpmat_tau_bcf(data, resp, pen, num_cp, z));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_mu_bcf
List get_best_trees_mu_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_mu, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, int num_splits_mu, int num_splits_tau, int gridsize_mu, bool zero_split, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_mu_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_muSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP zero_splitSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_mu(resids_cp_mat_muSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_mu_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_mu, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, num_splits_mu, num_splits_tau, gridsize_mu, zero_split, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_mu_bcf_2
List get_best_trees_mu_bcf_2(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_mu, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, int num_splits_mu, int num_splits_tau, int gridsize_mu, bool zero_split, IntegerVector no_more_mu_trees, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_mu_bcf_2(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_muSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP zero_splitSEXP, SEXP no_more_mu_treesSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_mu(resids_cp_mat_muSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type no_more_mu_trees(no_more_mu_treesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_mu_bcf_2(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_mu, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, num_splits_mu, num_splits_tau, gridsize_mu, zero_split, no_more_mu_trees, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_sum_mu_bcf
List get_best_trees_sum_mu_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_mu, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, int num_splits_mu, int num_splits_tau, int gridsize_mu, bool zero_split, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_sum_mu_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_muSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP zero_splitSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_mu(resids_cp_mat_muSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_sum_mu_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_mu, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, num_splits_mu, num_splits_tau, gridsize_mu, zero_split, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_sum_mu_bcf_2
List get_best_trees_sum_mu_bcf_2(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_mu, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, int num_splits_mu, int num_splits_tau, int gridsize_mu, bool zero_split, IntegerVector no_more_mu_trees, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_sum_mu_bcf_2(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_muSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP zero_splitSEXP, SEXP no_more_mu_treesSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_mu(resids_cp_mat_muSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type no_more_mu_trees(no_more_mu_treesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_sum_mu_bcf_2(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_mu, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, num_splits_mu, num_splits_tau, gridsize_mu, zero_split, no_more_mu_trees, min_num_obs_for_mu_split, min_num_obs_after_mu_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_tau_bcf
List get_best_trees_tau_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_tau, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, int num_splits_mu, int num_splits_tau, int gridsize_tau, bool zero_split, IntegerVector no_more_tau_trees, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_tau_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_tauSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_tauSEXP, SEXP zero_splitSEXP, SEXP no_more_tau_treesSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_tau(resids_cp_mat_tauSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type no_more_tau_trees(no_more_tau_treesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_tau_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_tau, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, num_splits_mu, num_splits_tau, gridsize_tau, zero_split, no_more_tau_trees, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_sum_tau_round1_bcf
List get_best_trees_sum_tau_round1_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_tau, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_mat_mu, NumericVector y_scaled, int num_splits_mu, int num_splits_tau, int gridsize_tau, bool zero_split, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_sum_tau_round1_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_tauSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP y_scaledSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_tauSEXP, SEXP zero_splitSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_tau(resids_cp_mat_tauSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_sum_tau_round1_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_tau, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, prev_sum_trees_mu, prev_sum_trees_mat_mu, y_scaled, num_splits_mu, num_splits_tau, gridsize_tau, zero_split, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_sum_tau_bcf
List get_best_trees_sum_tau_bcf(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_tau, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, int num_splits_mu, int num_splits_tau, int gridsize_tau, bool zero_split, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_sum_tau_bcf(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_tauSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_tauSEXP, SEXP zero_splitSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_tau(resids_cp_mat_tauSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_sum_tau_bcf(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_tau, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, num_splits_mu, num_splits_tau, gridsize_tau, zero_split, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// get_best_trees_sum_tau_bcf_2
List get_best_trees_sum_tau_bcf_2(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double num_obs, double num_vars_mu, double lambda_poisson_mu, double num_vars_tau, double lambda_poisson_tau, arma::mat& x_control_a, arma::mat& x_moderate_a, NumericVector z, NumericMatrix resids, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, List tree_table_mu, List tree_mat_mu, List tree_table_tau, List tree_mat_tau, double lowest_BIC, IntegerVector parent, List resids_cp_mat_tau, IntegerVector err_list, NumericMatrix x_control_test, NumericMatrix x_moderate_test, NumericVector test_z, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool is_test_data, double pen_mu, int num_cp_mu, double pen_tau, int num_cp_tau, bool split_rule_node, bool gridpoint, int maxOWsize, List prev_sum_trees_mu, List prev_sum_trees_tau, List prev_sum_trees_mat_mu, List prev_sum_trees_mat_tau, NumericVector y_scaled, int num_splits_mu, int num_splits_tau, int gridsize_tau, bool zero_split, IntegerVector no_more_tau_trees, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals);
RcppExport SEXP _bcfbma_get_best_trees_sum_tau_bcf_2(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP num_obsSEXP, SEXP num_vars_muSEXP, SEXP lambda_poisson_muSEXP, SEXP num_vars_tauSEXP, SEXP lambda_poisson_tauSEXP, SEXP x_control_aSEXP, SEXP x_moderate_aSEXP, SEXP zSEXP, SEXP residsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP tree_table_muSEXP, SEXP tree_mat_muSEXP, SEXP tree_table_tauSEXP, SEXP tree_mat_tauSEXP, SEXP lowest_BICSEXP, SEXP parentSEXP, SEXP resids_cp_mat_tauSEXP, SEXP err_listSEXP, SEXP x_control_testSEXP, SEXP x_moderate_testSEXP, SEXP test_zSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP is_test_dataSEXP, SEXP pen_muSEXP, SEXP num_cp_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP prev_sum_trees_muSEXP, SEXP prev_sum_trees_tauSEXP, SEXP prev_sum_trees_mat_muSEXP, SEXP prev_sum_trees_mat_tauSEXP, SEXP y_scaledSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_tauSEXP, SEXP zero_splitSEXP, SEXP no_more_tau_treesSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_mu(num_vars_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type num_vars_tau(num_vars_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_control_a(x_control_aSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_moderate_a(x_moderate_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_mu(tree_table_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_mu(tree_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type tree_table_tau(tree_table_tauSEXP);
    Rcpp::traits::input_parameter< List >::type tree_mat_tau(tree_mat_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lowest_BIC(lowest_BICSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent(parentSEXP);
    Rcpp::traits::input_parameter< List >::type resids_cp_mat_tau(resids_cp_mat_tauSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type err_list(err_listSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_control_test(x_control_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_moderate_test(x_moderate_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type is_test_data(is_test_dataSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mu(prev_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_tau(prev_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_mu(prev_sum_trees_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type prev_sum_trees_mat_tau(prev_sum_trees_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y_scaled(y_scaledSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type no_more_tau_trees(no_more_tau_treesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_trees_sum_tau_bcf_2(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, num_obs, num_vars_mu, lambda_poisson_mu, num_vars_tau, lambda_poisson_tau, x_control_a, x_moderate_a, z, resids, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, tree_table_mu, tree_mat_mu, tree_table_tau, tree_mat_tau, lowest_BIC, parent, resids_cp_mat_tau, err_list, x_control_test, x_moderate_test, test_z, alpha_mu, alpha_tau, beta_mu, beta_tau, is_test_data, pen_mu, num_cp_mu, pen_tau, num_cp_tau, split_rule_node, gridpoint, maxOWsize, prev_sum_trees_mu, prev_sum_trees_tau, prev_sum_trees_mat_mu, prev_sum_trees_mat_tau, y_scaled, num_splits_mu, num_splits_tau, gridsize_tau, zero_split, no_more_tau_trees, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals));
    return rcpp_result_gen;
END_RCPP
}
// scale_response_bcf
NumericVector scale_response_bcf(double a, double b, double c, double d, NumericVector y);
RcppExport SEXP _bcfbma_scale_response_bcf(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(scale_response_bcf(a, b, c, d, y));
    return rcpp_result_gen;
END_RCPP
}
// get_original_bcf
NumericVector get_original_bcf(double low, double high, double sp_low, double sp_high, NumericVector sum_preds);
RcppExport SEXP _bcfbma_get_original_bcf(SEXP lowSEXP, SEXP highSEXP, SEXP sp_lowSEXP, SEXP sp_highSEXP, SEXP sum_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type low(lowSEXP);
    Rcpp::traits::input_parameter< double >::type high(highSEXP);
    Rcpp::traits::input_parameter< double >::type sp_low(sp_lowSEXP);
    Rcpp::traits::input_parameter< double >::type sp_high(sp_highSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sum_preds(sum_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_original_bcf(low, high, sp_low, sp_high, sum_preds));
    return rcpp_result_gen;
END_RCPP
}
// get_original_TE_bcf
NumericVector get_original_TE_bcf(double low, double high, double sp_low, double sp_high, NumericVector sum_preds);
RcppExport SEXP _bcfbma_get_original_TE_bcf(SEXP lowSEXP, SEXP highSEXP, SEXP sp_lowSEXP, SEXP sp_highSEXP, SEXP sum_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type low(lowSEXP);
    Rcpp::traits::input_parameter< double >::type high(highSEXP);
    Rcpp::traits::input_parameter< double >::type sp_low(sp_lowSEXP);
    Rcpp::traits::input_parameter< double >::type sp_high(sp_highSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sum_preds(sum_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_original_TE_bcf(low, high, sp_low, sp_high, sum_preds));
    return rcpp_result_gen;
END_RCPP
}
// get_original_TE_double_bcf
double get_original_TE_double_bcf(double low, double high, double sp_low, double sp_high, double sum_preds);
RcppExport SEXP _bcfbma_get_original_TE_double_bcf(SEXP lowSEXP, SEXP highSEXP, SEXP sp_lowSEXP, SEXP sp_highSEXP, SEXP sum_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type low(lowSEXP);
    Rcpp::traits::input_parameter< double >::type high(highSEXP);
    Rcpp::traits::input_parameter< double >::type sp_low(sp_lowSEXP);
    Rcpp::traits::input_parameter< double >::type sp_high(sp_highSEXP);
    Rcpp::traits::input_parameter< double >::type sum_preds(sum_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_original_TE_double_bcf(low, high, sp_low, sp_high, sum_preds));
    return rcpp_result_gen;
END_RCPP
}
// get_original_TE_arma_bcf
arma::vec get_original_TE_arma_bcf(double low, double high, double sp_low, double sp_high, arma::vec sum_preds);
RcppExport SEXP _bcfbma_get_original_TE_arma_bcf(SEXP lowSEXP, SEXP highSEXP, SEXP sp_lowSEXP, SEXP sp_highSEXP, SEXP sum_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type low(lowSEXP);
    Rcpp::traits::input_parameter< double >::type high(highSEXP);
    Rcpp::traits::input_parameter< double >::type sp_low(sp_lowSEXP);
    Rcpp::traits::input_parameter< double >::type sp_high(sp_highSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sum_preds(sum_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_original_TE_arma_bcf(low, high, sp_low, sp_high, sum_preds));
    return rcpp_result_gen;
END_RCPP
}
// get_termobs_test_data_all
List get_termobs_test_data_all(NumericMatrix test_data, NumericMatrix tree_data);
RcppExport SEXP _bcfbma_get_termobs_test_data_all(SEXP test_dataSEXP, SEXP tree_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(get_termobs_test_data_all(test_data, tree_data));
    return rcpp_result_gen;
END_RCPP
}
// get_termobs_test_data_treated
List get_termobs_test_data_treated(NumericMatrix test_data, NumericMatrix tree_data, NumericVector z_test);
RcppExport SEXP _bcfbma_get_termobs_test_data_treated(SEXP test_dataSEXP, SEXP tree_dataSEXP, SEXP z_testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    rcpp_result_gen = Rcpp::wrap(get_termobs_test_data_treated(test_data, tree_data, z_test));
    return rcpp_result_gen;
END_RCPP
}
// get_termobs_testdata_overall_all
List get_termobs_testdata_overall_all(List overall_sum_trees, NumericMatrix test_data);
RcppExport SEXP _bcfbma_get_termobs_testdata_overall_all(SEXP overall_sum_treesSEXP, SEXP test_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(get_termobs_testdata_overall_all(overall_sum_trees, test_data));
    return rcpp_result_gen;
END_RCPP
}
// get_termobs_testdata_overall_treated
List get_termobs_testdata_overall_treated(List overall_sum_trees, NumericMatrix test_data, NumericVector z_test);
RcppExport SEXP _bcfbma_get_termobs_testdata_overall_treated(SEXP overall_sum_treesSEXP, SEXP test_dataSEXP, SEXP z_testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    rcpp_result_gen = Rcpp::wrap(get_termobs_testdata_overall_treated(overall_sum_trees, test_data, z_test));
    return rcpp_result_gen;
END_RCPP
}
// get_J_test
arma::mat get_J_test(List curr_termobs, NumericVector tree_term_nodes, int n);
RcppExport SEXP _bcfbma_get_J_test(SEXP curr_termobsSEXP, SEXP tree_term_nodesSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type curr_termobs(curr_termobsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tree_term_nodes(tree_term_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(get_J_test(curr_termobs, tree_term_nodes, n));
    return rcpp_result_gen;
END_RCPP
}
// get_W_test
arma::mat get_W_test(List sum_treetable, List termobs_testdata_onemodel, int n);
RcppExport SEXP _bcfbma_get_W_test(SEXP sum_treetableSEXP, SEXP termobs_testdata_onemodelSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type sum_treetable(sum_treetableSEXP);
    Rcpp::traits::input_parameter< List >::type termobs_testdata_onemodel(termobs_testdata_onemodelSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(get_W_test(sum_treetable, termobs_testdata_onemodel, n));
    return rcpp_result_gen;
END_RCPP
}
// preds_bcfbma_lin_alg_insamp
NumericVector preds_bcfbma_lin_alg_insamp(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_preds_bcfbma_lin_alg_insamp(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(preds_bcfbma_lin_alg_insamp(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// preds_bcfbma_lin_alg_outsamp
NumericVector preds_bcfbma_lin_alg_outsamp(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs);
RcppExport SEXP _bcfbma_preds_bcfbma_lin_alg_outsamp(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(preds_bcfbma_lin_alg_outsamp(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs));
    return rcpp_result_gen;
END_RCPP
}
// BCF_BMA_sumLikelihood
List BCF_BMA_sumLikelihood(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double lambda_poisson_mu, double lambda_poisson_tau, NumericMatrix data, NumericVector y, NumericVector z, NumericMatrix pihat, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, double pen_mu, double pen_tau, int num_cp_mu, int num_cp_tau, NumericMatrix test_data, NumericVector test_z, NumericMatrix test_pihat, int ntree_control, int ntree_moderate, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool split_rule_node, bool gridpoint, int maxOWsize, int num_splits_mu, int num_splits_tau, int gridsize_mu, int gridsize_tau, int include_pi2, bool zero_split, bool only_max_num_trees, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals, int transform_resids);
RcppExport SEXP _bcfbma_BCF_BMA_sumLikelihood(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP lambda_poisson_muSEXP, SEXP lambda_poisson_tauSEXP, SEXP dataSEXP, SEXP ySEXP, SEXP zSEXP, SEXP pihatSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP pen_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_muSEXP, SEXP num_cp_tauSEXP, SEXP test_dataSEXP, SEXP test_zSEXP, SEXP test_pihatSEXP, SEXP ntree_controlSEXP, SEXP ntree_moderateSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP gridsize_tauSEXP, SEXP include_pi2SEXP, SEXP zero_splitSEXP, SEXP only_max_num_treesSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP, SEXP transform_residsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pihat(pihatSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_control(ntree_controlSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_moderate(ntree_moderateSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< bool >::type only_max_num_trees(only_max_num_treesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    Rcpp::traits::input_parameter< int >::type transform_resids(transform_residsSEXP);
    rcpp_result_gen = Rcpp::wrap(BCF_BMA_sumLikelihood(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, lambda_poisson_mu, lambda_poisson_tau, data, y, z, pihat, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, pen_mu, pen_tau, num_cp_mu, num_cp_tau, test_data, test_z, test_pihat, ntree_control, ntree_moderate, alpha_mu, alpha_tau, beta_mu, beta_tau, split_rule_node, gridpoint, maxOWsize, num_splits_mu, num_splits_tau, gridsize_mu, gridsize_tau, include_pi2, zero_split, only_max_num_trees, min_num_obs_for_mu_split, min_num_obs_after_mu_split, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals, transform_resids));
    return rcpp_result_gen;
END_RCPP
}
// fuse_intvecs
IntegerVector fuse_intvecs(IntegerVector a, IntegerVector b);
RcppExport SEXP _bcfbma_fuse_intvecs(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(fuse_intvecs(a, b));
    return rcpp_result_gen;
END_RCPP
}
// fuse_numvecs
NumericVector fuse_numvecs(NumericVector a, NumericVector b);
RcppExport SEXP _bcfbma_fuse_numvecs(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(fuse_numvecs(a, b));
    return rcpp_result_gen;
END_RCPP
}
// fuse_lists
List fuse_lists(List a, List b);
RcppExport SEXP _bcfbma_fuse_lists(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type a(aSEXP);
    Rcpp::traits::input_parameter< List >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(fuse_lists(a, b));
    return rcpp_result_gen;
END_RCPP
}
// fuse_listsof_intvecs
List fuse_listsof_intvecs(List a, List b);
RcppExport SEXP _bcfbma_fuse_listsof_intvecs(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type a(aSEXP);
    Rcpp::traits::input_parameter< List >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(fuse_listsof_intvecs(a, b));
    return rcpp_result_gen;
END_RCPP
}
// mmult1
NumericMatrix mmult1(NumericMatrix a, NumericMatrix b);
RcppExport SEXP _bcfbma_mmult1(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mmult1(a, b));
    return rcpp_result_gen;
END_RCPP
}
// BCF_BMA_sumLikelihood_add_mu_or_tau
List BCF_BMA_sumLikelihood_add_mu_or_tau(double spike_tree, int s_t_hyperprior, double p_s_t_mu, double a_s_t_mu, double b_s_t_mu, double p_s_t_tau, double a_s_t_tau, double b_s_t_tau, double lambda_poisson_mu, double lambda_poisson_tau, NumericMatrix data, NumericVector y, NumericVector z, NumericMatrix pihat, double a_mu, double a_tau, double mu_mu, double mu_tau, double nu, double lambda, double c, double sigma_mu_mu, double sigma_mu_tau, double pen_mu, double pen_tau, int num_cp_mu, int num_cp_tau, NumericMatrix test_data, NumericVector test_z, NumericMatrix test_pihat, int ntree_control, int ntree_moderate, double alpha_mu, double alpha_tau, double beta_mu, double beta_tau, bool split_rule_node, bool gridpoint, int maxOWsize, int num_splits_mu, int num_splits_tau, int gridsize_mu, int gridsize_tau, int include_pi2, bool zero_split, bool only_max_num_trees, int separate_tree_numbers, unsigned int min_num_obs_for_mu_split, unsigned int min_num_obs_after_mu_split, unsigned int min_num_obs_for_tau_split, unsigned int min_num_obs_after_tau_split, int exact_residuals, int transform_resids);
RcppExport SEXP _bcfbma_BCF_BMA_sumLikelihood_add_mu_or_tau(SEXP spike_treeSEXP, SEXP s_t_hyperpriorSEXP, SEXP p_s_t_muSEXP, SEXP a_s_t_muSEXP, SEXP b_s_t_muSEXP, SEXP p_s_t_tauSEXP, SEXP a_s_t_tauSEXP, SEXP b_s_t_tauSEXP, SEXP lambda_poisson_muSEXP, SEXP lambda_poisson_tauSEXP, SEXP dataSEXP, SEXP ySEXP, SEXP zSEXP, SEXP pihatSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP mu_muSEXP, SEXP mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP cSEXP, SEXP sigma_mu_muSEXP, SEXP sigma_mu_tauSEXP, SEXP pen_muSEXP, SEXP pen_tauSEXP, SEXP num_cp_muSEXP, SEXP num_cp_tauSEXP, SEXP test_dataSEXP, SEXP test_zSEXP, SEXP test_pihatSEXP, SEXP ntree_controlSEXP, SEXP ntree_moderateSEXP, SEXP alpha_muSEXP, SEXP alpha_tauSEXP, SEXP beta_muSEXP, SEXP beta_tauSEXP, SEXP split_rule_nodeSEXP, SEXP gridpointSEXP, SEXP maxOWsizeSEXP, SEXP num_splits_muSEXP, SEXP num_splits_tauSEXP, SEXP gridsize_muSEXP, SEXP gridsize_tauSEXP, SEXP include_pi2SEXP, SEXP zero_splitSEXP, SEXP only_max_num_treesSEXP, SEXP separate_tree_numbersSEXP, SEXP min_num_obs_for_mu_splitSEXP, SEXP min_num_obs_after_mu_splitSEXP, SEXP min_num_obs_for_tau_splitSEXP, SEXP min_num_obs_after_tau_splitSEXP, SEXP exact_residualsSEXP, SEXP transform_residsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type spike_tree(spike_treeSEXP);
    Rcpp::traits::input_parameter< int >::type s_t_hyperprior(s_t_hyperpriorSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_mu(p_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_mu(a_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_mu(b_s_t_muSEXP);
    Rcpp::traits::input_parameter< double >::type p_s_t_tau(p_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type a_s_t_tau(a_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type b_s_t_tau(b_s_t_tauSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_mu(lambda_poisson_muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_poisson_tau(lambda_poisson_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pihat(pihatSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_tau(mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_mu(sigma_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_mu_tau(sigma_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type pen_mu(pen_muSEXP);
    Rcpp::traits::input_parameter< double >::type pen_tau(pen_tauSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_mu(num_cp_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_cp_tau(num_cp_tauSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_z(test_zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_control(ntree_controlSEXP);
    Rcpp::traits::input_parameter< int >::type ntree_moderate(ntree_moderateSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mu(alpha_muSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_tau(alpha_tauSEXP);
    Rcpp::traits::input_parameter< double >::type beta_mu(beta_muSEXP);
    Rcpp::traits::input_parameter< double >::type beta_tau(beta_tauSEXP);
    Rcpp::traits::input_parameter< bool >::type split_rule_node(split_rule_nodeSEXP);
    Rcpp::traits::input_parameter< bool >::type gridpoint(gridpointSEXP);
    Rcpp::traits::input_parameter< int >::type maxOWsize(maxOWsizeSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_mu(num_splits_muSEXP);
    Rcpp::traits::input_parameter< int >::type num_splits_tau(num_splits_tauSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_mu(gridsize_muSEXP);
    Rcpp::traits::input_parameter< int >::type gridsize_tau(gridsize_tauSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< bool >::type zero_split(zero_splitSEXP);
    Rcpp::traits::input_parameter< bool >::type only_max_num_trees(only_max_num_treesSEXP);
    Rcpp::traits::input_parameter< int >::type separate_tree_numbers(separate_tree_numbersSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_mu_split(min_num_obs_for_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_mu_split(min_num_obs_after_mu_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_for_tau_split(min_num_obs_for_tau_splitSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type min_num_obs_after_tau_split(min_num_obs_after_tau_splitSEXP);
    Rcpp::traits::input_parameter< int >::type exact_residuals(exact_residualsSEXP);
    Rcpp::traits::input_parameter< int >::type transform_resids(transform_residsSEXP);
    rcpp_result_gen = Rcpp::wrap(BCF_BMA_sumLikelihood_add_mu_or_tau(spike_tree, s_t_hyperprior, p_s_t_mu, a_s_t_mu, b_s_t_mu, p_s_t_tau, a_s_t_tau, b_s_t_tau, lambda_poisson_mu, lambda_poisson_tau, data, y, z, pihat, a_mu, a_tau, mu_mu, mu_tau, nu, lambda, c, sigma_mu_mu, sigma_mu_tau, pen_mu, pen_tau, num_cp_mu, num_cp_tau, test_data, test_z, test_pihat, ntree_control, ntree_moderate, alpha_mu, alpha_tau, beta_mu, beta_tau, split_rule_node, gridpoint, maxOWsize, num_splits_mu, num_splits_tau, gridsize_mu, gridsize_tau, include_pi2, zero_split, only_max_num_trees, separate_tree_numbers, min_num_obs_for_mu_split, min_num_obs_after_mu_split, min_num_obs_for_tau_split, min_num_obs_after_tau_split, exact_residuals, transform_resids));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_insamp_bcf
List mean_vars_lin_alg_insamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_insamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_insamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_outsamp_bcf
List mean_vars_lin_alg_outsamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_outsamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_outsamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_outsamp_bcf
List pred_ints_lin_alg_outsamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, double lower_prob, double upper_prob);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_outsamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_outsamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, lower_prob, upper_prob));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_insamp_bcf
List pred_ints_lin_alg_insamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, double lower_prob, double upper_prob);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_insamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_insamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, lower_prob, upper_prob));
    return rcpp_result_gen;
END_RCPP
}
// get_termobs_test_data_fields_bcf
arma::field<arma::uvec> get_termobs_test_data_fields_bcf(NumericMatrix test_data, NumericMatrix tree_data);
RcppExport SEXP _bcfbma_get_termobs_test_data_fields_bcf(SEXP test_dataSEXP, SEXP tree_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(get_termobs_test_data_fields_bcf(test_data, tree_data));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_fields_outsamp_bcf
List pred_ints_lin_alg_fields_outsamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, double lower_prob, double upper_prob, int num_cores);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_fields_outsamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_fields_outsamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, lower_prob, upper_prob, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_fields_insamp_bcf
List pred_ints_lin_alg_fields_insamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, double lower_prob, double upper_prob, int num_cores);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_fields_insamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_fields_insamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, lower_prob, upper_prob, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_fields_LDL_outsamp_bcf
List pred_ints_lin_alg_fields_LDL_outsamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, double lower_prob, double upper_prob, int num_cores);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_fields_LDL_outsamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_fields_LDL_outsamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, lower_prob, upper_prob, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_fields_LDL_insamp_bcf
List pred_ints_lin_alg_fields_LDL_insamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, double lower_prob, double upper_prob, int num_cores);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_fields_LDL_insamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_fields_LDL_insamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, lower_prob, upper_prob, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_insamp_par_bcf
List mean_vars_lin_alg_insamp_par_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, int num_cores);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_insamp_par_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_insamp_par_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_outsamp_par_bcf
List mean_vars_lin_alg_outsamp_par_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, int num_cores);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_outsamp_par_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_outsamp_par_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_insamp_par_cate
List mean_vars_lin_alg_insamp_par_cate(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, int num_cores);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_insamp_par_cate(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_insamp_par_cate(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// mean_vars_lin_alg_outsamp_par_cate
List mean_vars_lin_alg_outsamp_par_cate(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, int num_cores);
RcppExport SEXP _bcfbma_mean_vars_lin_alg_outsamp_par_cate(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_vars_lin_alg_outsamp_par_cate(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_lin_alg_fields_LDL_insamp_cate
List pred_ints_lin_alg_fields_LDL_insamp_cate(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, double lower_prob, double upper_prob, int num_cores);
RcppExport SEXP _bcfbma_pred_ints_lin_alg_fields_LDL_insamp_cate(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_lin_alg_fields_LDL_insamp_cate(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, lower_prob, upper_prob, num_cores));
    return rcpp_result_gen;
END_RCPP
}
// mixt_eval_cdf
double mixt_eval_cdf(double x_val, double d_o_f, std::vector<double> mean_vec, std::vector<double> var_vec, std::vector<double> weights_vec, double quant_val);
RcppExport SEXP _bcfbma_mixt_eval_cdf(SEXP x_valSEXP, SEXP d_o_fSEXP, SEXP mean_vecSEXP, SEXP var_vecSEXP, SEXP weights_vecSEXP, SEXP quant_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x_val(x_valSEXP);
    Rcpp::traits::input_parameter< double >::type d_o_f(d_o_fSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type mean_vec(mean_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type weights_vec(weights_vecSEXP);
    Rcpp::traits::input_parameter< double >::type quant_val(quant_valSEXP);
    rcpp_result_gen = Rcpp::wrap(mixt_eval_cdf(x_val, d_o_f, mean_vec, var_vec, weights_vec, quant_val));
    return rcpp_result_gen;
END_RCPP
}
// rootmixt
double rootmixt(double d_o_f, double a, double b, std::vector<double> mean_vec, std::vector<double> var_vec, std::vector<double> weights_vec, double quant_val, double root_alg_precision);
RcppExport SEXP _bcfbma_rootmixt(SEXP d_o_fSEXP, SEXP aSEXP, SEXP bSEXP, SEXP mean_vecSEXP, SEXP var_vecSEXP, SEXP weights_vecSEXP, SEXP quant_valSEXP, SEXP root_alg_precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d_o_f(d_o_fSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type mean_vec(mean_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type var_vec(var_vecSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type weights_vec(weights_vecSEXP);
    Rcpp::traits::input_parameter< double >::type quant_val(quant_valSEXP);
    Rcpp::traits::input_parameter< double >::type root_alg_precision(root_alg_precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(rootmixt(d_o_f, a, b, mean_vec, var_vec, weights_vec, quant_val, root_alg_precision));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_exact_outsamp_bcf
List pred_ints_exact_outsamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, double lower_prob, double upper_prob, int num_cores, double root_alg_precision);
RcppExport SEXP _bcfbma_pred_ints_exact_outsamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP, SEXP root_alg_precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    Rcpp::traits::input_parameter< double >::type root_alg_precision(root_alg_precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_exact_outsamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, lower_prob, upper_prob, num_cores, root_alg_precision));
    return rcpp_result_gen;
END_RCPP
}
// pred_ints_exact_insamp_bcf
List pred_ints_exact_insamp_bcf(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, NumericVector z, double lower_prob, double upper_prob, int num_cores, double root_alg_precision);
RcppExport SEXP _bcfbma_pred_ints_exact_insamp_bcf(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP zSEXP, SEXP lower_probSEXP, SEXP upper_probSEXP, SEXP num_coresSEXP, SEXP root_alg_precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type lower_prob(lower_probSEXP);
    Rcpp::traits::input_parameter< double >::type upper_prob(upper_probSEXP);
    Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP);
    Rcpp::traits::input_parameter< double >::type root_alg_precision(root_alg_precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_ints_exact_insamp_bcf(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, z, lower_prob, upper_prob, num_cores, root_alg_precision));
    return rcpp_result_gen;
END_RCPP
}
// find_term_nodes_gs
NumericVector find_term_nodes_gs(NumericMatrix tree_table);
RcppExport SEXP _bcfbma_find_term_nodes_gs(SEXP tree_tableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_table(tree_tableSEXP);
    rcpp_result_gen = Rcpp::wrap(find_term_nodes_gs(tree_table));
    return rcpp_result_gen;
END_RCPP
}
// find_term_obs_gs
NumericVector find_term_obs_gs(NumericMatrix tree_matrix_temp, double terminal_node);
RcppExport SEXP _bcfbma_find_term_obs_gs(SEXP tree_matrix_tempSEXP, SEXP terminal_nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_matrix_temp(tree_matrix_tempSEXP);
    Rcpp::traits::input_parameter< double >::type terminal_node(terminal_nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(find_term_obs_gs(tree_matrix_temp, terminal_node));
    return rcpp_result_gen;
END_RCPP
}
// calc_rowsums
NumericVector calc_rowsums(NumericMatrix predictions);
RcppExport SEXP _bcfbma_calc_rowsums(SEXP predictionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type predictions(predictionsSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_rowsums(predictions));
    return rcpp_result_gen;
END_RCPP
}
// calculate_resids
NumericVector calculate_resids(NumericMatrix predictions, NumericVector response);
RcppExport SEXP _bcfbma_calculate_resids(SEXP predictionsSEXP, SEXP responseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type predictions(predictionsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type response(responseSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_resids(predictions, response));
    return rcpp_result_gen;
END_RCPP
}
// update_Gibbs_mean_var
List update_Gibbs_mean_var(NumericVector resids, double a, double sigma, double mu_mu, IntegerVector terminal_nodes, List term_obs_tree);
RcppExport SEXP _bcfbma_update_Gibbs_mean_var(SEXP residsSEXP, SEXP aSEXP, SEXP sigmaSEXP, SEXP mu_muSEXP, SEXP terminal_nodesSEXP, SEXP term_obs_treeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu(mu_muSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type terminal_nodes(terminal_nodesSEXP);
    Rcpp::traits::input_parameter< List >::type term_obs_tree(term_obs_treeSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Gibbs_mean_var(resids, a, sigma, mu_mu, terminal_nodes, term_obs_tree));
    return rcpp_result_gen;
END_RCPP
}
// update_sigma
double update_sigma(double a1, double b, NumericVector resids, int n);
RcppExport SEXP _bcfbma_update_sigma(SEXP a1SEXP, SEXP bSEXP, SEXP residsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resids(residsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(update_sigma(a1, b, resids, n));
    return rcpp_result_gen;
END_RCPP
}
// find_node_means
NumericVector find_node_means(NumericMatrix sum_tree, NumericVector term_nodes);
RcppExport SEXP _bcfbma_find_node_means(SEXP sum_treeSEXP, SEXP term_nodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sum_tree(sum_treeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type term_nodes(term_nodesSEXP);
    rcpp_result_gen = Rcpp::wrap(find_node_means(sum_tree, term_nodes));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info
List get_tree_info(List overall_sum_trees, List overall_sum_mat, int num_obs);
RcppExport SEXP _bcfbma_get_tree_info(SEXP overall_sum_treesSEXP, SEXP overall_sum_matSEXP, SEXP num_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat(overall_sum_matSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info(overall_sum_trees, overall_sum_mat, num_obs));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info_tau
List get_tree_info_tau(List overall_sum_trees, List overall_sum_mat, int num_obs, NumericVector z);
RcppExport SEXP _bcfbma_get_tree_info_tau(SEXP overall_sum_treesSEXP, SEXP overall_sum_matSEXP, SEXP num_obsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat(overall_sum_matSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info_tau(overall_sum_trees, overall_sum_mat, num_obs, z));
    return rcpp_result_gen;
END_RCPP
}
// remove_curr_col
NumericMatrix remove_curr_col(NumericMatrix predy, int i);
RcppExport SEXP _bcfbma_remove_curr_col(SEXP predySEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type predy(predySEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(remove_curr_col(predy, i));
    return rcpp_result_gen;
END_RCPP
}
// get_new_mean
NumericVector get_new_mean(IntegerVector terminal_nodes, List new_mean_var);
RcppExport SEXP _bcfbma_get_new_mean(SEXP terminal_nodesSEXP, SEXP new_mean_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type terminal_nodes(terminal_nodesSEXP);
    Rcpp::traits::input_parameter< List >::type new_mean_var(new_mean_varSEXP);
    rcpp_result_gen = Rcpp::wrap(get_new_mean(terminal_nodes, new_mean_var));
    return rcpp_result_gen;
END_RCPP
}
// update_predictions_gs
List update_predictions_gs(NumericVector new_mean, NumericVector new_var, int n, IntegerVector terminal_nodes, List term_obs_tree);
RcppExport SEXP _bcfbma_update_predictions_gs(SEXP new_meanSEXP, SEXP new_varSEXP, SEXP nSEXP, SEXP terminal_nodesSEXP, SEXP term_obs_treeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type new_mean(new_meanSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type new_var(new_varSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type terminal_nodes(terminal_nodesSEXP);
    Rcpp::traits::input_parameter< List >::type term_obs_tree(term_obs_treeSEXP);
    rcpp_result_gen = Rcpp::wrap(update_predictions_gs(new_mean, new_var, n, terminal_nodes, term_obs_tree));
    return rcpp_result_gen;
END_RCPP
}
// scale_response_gs
NumericVector scale_response_gs(double a, double b, double c, double d, NumericVector y);
RcppExport SEXP _bcfbma_scale_response_gs(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(scale_response_gs(a, b, c, d, y));
    return rcpp_result_gen;
END_RCPP
}
// get_original_gs
NumericVector get_original_gs(double low, double high, double sp_low, double sp_high, NumericVector sum_preds);
RcppExport SEXP _bcfbma_get_original_gs(SEXP lowSEXP, SEXP highSEXP, SEXP sp_lowSEXP, SEXP sp_highSEXP, SEXP sum_predsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type low(lowSEXP);
    Rcpp::traits::input_parameter< double >::type high(highSEXP);
    Rcpp::traits::input_parameter< double >::type sp_low(sp_lowSEXP);
    Rcpp::traits::input_parameter< double >::type sp_high(sp_highSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sum_preds(sum_predsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_original_gs(low, high, sp_low, sp_high, sum_preds));
    return rcpp_result_gen;
END_RCPP
}
// find_internal_nodes_gs
NumericVector find_internal_nodes_gs(NumericMatrix treetable);
RcppExport SEXP _bcfbma_find_internal_nodes_gs(SEXP treetableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type treetable(treetableSEXP);
    rcpp_result_gen = Rcpp::wrap(find_internal_nodes_gs(treetable));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info_test_data
List get_tree_info_test_data(NumericMatrix test_data, NumericMatrix tree_data);
RcppExport SEXP _bcfbma_get_tree_info_test_data(SEXP test_dataSEXP, SEXP tree_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info_test_data(test_data, tree_data));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info_test_data_tau
List get_tree_info_test_data_tau(NumericMatrix test_data, NumericMatrix tree_data, NumericVector z_test);
RcppExport SEXP _bcfbma_get_tree_info_test_data_tau(SEXP test_dataSEXP, SEXP tree_dataSEXP, SEXP z_testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_data(tree_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info_test_data_tau(test_data, tree_data, z_test));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info_testdata_overall
List get_tree_info_testdata_overall(List overall_sum_trees, int num_obs, NumericMatrix test_data);
RcppExport SEXP _bcfbma_get_tree_info_testdata_overall(SEXP overall_sum_treesSEXP, SEXP num_obsSEXP, SEXP test_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info_testdata_overall(overall_sum_trees, num_obs, test_data));
    return rcpp_result_gen;
END_RCPP
}
// get_tree_info_testdata_overall_tau
List get_tree_info_testdata_overall_tau(List overall_sum_trees, int num_obs, NumericMatrix test_data, NumericVector z_test);
RcppExport SEXP _bcfbma_get_tree_info_testdata_overall_tau(SEXP overall_sum_treesSEXP, SEXP num_obsSEXP, SEXP test_dataSEXP, SEXP z_testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees(overall_sum_treesSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tree_info_testdata_overall_tau(overall_sum_trees, num_obs, test_data, z_test));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler
List gibbs_sampler(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs);
RcppExport SEXP _bcfbma_gibbs_sampler(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler2
List gibbs_sampler2(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z);
RcppExport SEXP _bcfbma_gibbs_sampler2(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler2(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler_no_update
List gibbs_sampler_no_update(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs);
RcppExport SEXP _bcfbma_gibbs_sampler_no_update(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler_no_update(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler_no_update2
List gibbs_sampler_no_update2(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z);
RcppExport SEXP _bcfbma_gibbs_sampler_no_update2(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler_no_update2(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler_new_inits
List gibbs_sampler_new_inits(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, List new_pred_list_mu, List new_pred_list_tau);
RcppExport SEXP _bcfbma_gibbs_sampler_new_inits(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP new_pred_list_muSEXP, SEXP new_pred_list_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_mu(new_pred_list_muSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_tau(new_pred_list_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler_new_inits(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, new_pred_list_mu, new_pred_list_tau));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler2_new_inits
List gibbs_sampler2_new_inits(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, List new_pred_list_mu, List new_pred_list_tau);
RcppExport SEXP _bcfbma_gibbs_sampler2_new_inits(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP new_pred_list_muSEXP, SEXP new_pred_list_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_mu(new_pred_list_muSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_tau(new_pred_list_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler2_new_inits(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, new_pred_list_mu, new_pred_list_tau));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler_no_update_new_inits
List gibbs_sampler_no_update_new_inits(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, NumericMatrix test_data, NumericMatrix test_pihat, NumericVector z_test, int include_pi2, int num_propscores, int num_test_obs, List new_pred_list_mu, List new_pred_list_tau);
RcppExport SEXP _bcfbma_gibbs_sampler_no_update_new_inits(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP test_dataSEXP, SEXP test_pihatSEXP, SEXP z_testSEXP, SEXP include_pi2SEXP, SEXP num_propscoresSEXP, SEXP num_test_obsSEXP, SEXP new_pred_list_muSEXP, SEXP new_pred_list_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_data(test_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_pihat(test_pihatSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z_test(z_testSEXP);
    Rcpp::traits::input_parameter< int >::type include_pi2(include_pi2SEXP);
    Rcpp::traits::input_parameter< int >::type num_propscores(num_propscoresSEXP);
    Rcpp::traits::input_parameter< int >::type num_test_obs(num_test_obsSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_mu(new_pred_list_muSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_tau(new_pred_list_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler_no_update_new_inits(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, test_data, test_pihat, z_test, include_pi2, num_propscores, num_test_obs, new_pred_list_mu, new_pred_list_tau));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_sampler_no_update2_new_inits
List gibbs_sampler_no_update2_new_inits(List overall_sum_trees_mu, List overall_sum_trees_tau, List overall_sum_mat_mu, List overall_sum_mat_tau, NumericVector y, NumericVector BIC_weights, int num_iter, int burnin, int num_obs, double a_mu, double a_tau, double sigma, double mu_mu_mu, double mu_mu_tau, double nu, double lambda, List resids_mu, List resids_tau, NumericVector z, List new_pred_list_mu, List new_pred_list_tau);
RcppExport SEXP _bcfbma_gibbs_sampler_no_update2_new_inits(SEXP overall_sum_trees_muSEXP, SEXP overall_sum_trees_tauSEXP, SEXP overall_sum_mat_muSEXP, SEXP overall_sum_mat_tauSEXP, SEXP ySEXP, SEXP BIC_weightsSEXP, SEXP num_iterSEXP, SEXP burninSEXP, SEXP num_obsSEXP, SEXP a_muSEXP, SEXP a_tauSEXP, SEXP sigmaSEXP, SEXP mu_mu_muSEXP, SEXP mu_mu_tauSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP resids_muSEXP, SEXP resids_tauSEXP, SEXP zSEXP, SEXP new_pred_list_muSEXP, SEXP new_pred_list_tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_mu(overall_sum_trees_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_trees_tau(overall_sum_trees_tauSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_mu(overall_sum_mat_muSEXP);
    Rcpp::traits::input_parameter< List >::type overall_sum_mat_tau(overall_sum_mat_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type BIC_weights(BIC_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type num_iter(num_iterSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type num_obs(num_obsSEXP);
    Rcpp::traits::input_parameter< double >::type a_mu(a_muSEXP);
    Rcpp::traits::input_parameter< double >::type a_tau(a_tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_mu(mu_mu_muSEXP);
    Rcpp::traits::input_parameter< double >::type mu_mu_tau(mu_mu_tauSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< List >::type resids_mu(resids_muSEXP);
    Rcpp::traits::input_parameter< List >::type resids_tau(resids_tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_mu(new_pred_list_muSEXP);
    Rcpp::traits::input_parameter< List >::type new_pred_list_tau(new_pred_list_tauSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_sampler_no_update2_new_inits(overall_sum_trees_mu, overall_sum_trees_tau, overall_sum_mat_mu, overall_sum_mat_tau, y, BIC_weights, num_iter, burnin, num_obs, a_mu, a_tau, sigma, mu_mu_mu, mu_mu_tau, nu, lambda, resids_mu, resids_tau, z, new_pred_list_mu, new_pred_list_tau));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bcfbma_add_rows_bcf", (DL_FUNC) &_bcfbma_add_rows_bcf, 2},
    {"_bcfbma_addcol_bcf", (DL_FUNC) &_bcfbma_addcol_bcf, 4},
    {"_bcfbma_set_daughter_to_end_tree_bcf", (DL_FUNC) &_bcfbma_set_daughter_to_end_tree_bcf, 3},
    {"_bcfbma_set_daughter_to_end_mat_bcf", (DL_FUNC) &_bcfbma_set_daughter_to_end_mat_bcf, 5},
    {"_bcfbma_remove_zero_bcf", (DL_FUNC) &_bcfbma_remove_zero_bcf, 1},
    {"_bcfbma_order_intvec_bcf", (DL_FUNC) &_bcfbma_order_intvec_bcf, 1},
    {"_bcfbma_get_gnp_bcf", (DL_FUNC) &_bcfbma_get_gnp_bcf, 2},
    {"_bcfbma_find_term_nodes_bcf", (DL_FUNC) &_bcfbma_find_term_nodes_bcf, 1},
    {"_bcfbma_find_term_obs_bcf", (DL_FUNC) &_bcfbma_find_term_obs_bcf, 2},
    {"_bcfbma_likelihood_function_mu_bcf", (DL_FUNC) &_bcfbma_likelihood_function_mu_bcf, 7},
    {"_bcfbma_likelihood_function_bcf", (DL_FUNC) &_bcfbma_likelihood_function_bcf, 7},
    {"_bcfbma_find_internal_nodes_bcf", (DL_FUNC) &_bcfbma_find_internal_nodes_bcf, 1},
    {"_bcfbma_find_prev_nonterm_bcf", (DL_FUNC) &_bcfbma_find_prev_nonterm_bcf, 2},
    {"_bcfbma_find_nodes_to_update_bcf", (DL_FUNC) &_bcfbma_find_nodes_to_update_bcf, 2},
    {"_bcfbma_set_tree_to_middle_bcf", (DL_FUNC) &_bcfbma_set_tree_to_middle_bcf, 4},
    {"_bcfbma_update_grow_obs_bcf", (DL_FUNC) &_bcfbma_update_grow_obs_bcf, 6},
    {"_bcfbma_find_obs_to_update_grow_bcf", (DL_FUNC) &_bcfbma_find_obs_to_update_grow_bcf, 5},
    {"_bcfbma_get_daughter_obs_bcf", (DL_FUNC) &_bcfbma_get_daughter_obs_bcf, 4},
    {"_bcfbma_find_term_cols_bcf", (DL_FUNC) &_bcfbma_find_term_cols_bcf, 2},
    {"_bcfbma_get_grow_obs_bcf", (DL_FUNC) &_bcfbma_get_grow_obs_bcf, 3},
    {"_bcfbma_get_grow_obs_in_z_bcf", (DL_FUNC) &_bcfbma_get_grow_obs_in_z_bcf, 2},
    {"_bcfbma_grow_tree_bcf", (DL_FUNC) &_bcfbma_grow_tree_bcf, 8},
    {"_bcfbma_set_daughter_bcf", (DL_FUNC) &_bcfbma_set_daughter_bcf, 6},
    {"_bcfbma_order__bcf", (DL_FUNC) &_bcfbma_order__bcf, 1},
    {"_bcfbma_orderforOW__bcf", (DL_FUNC) &_bcfbma_orderforOW__bcf, 1},
    {"_bcfbma_secondKindStirlingNumber", (DL_FUNC) &_bcfbma_secondKindStirlingNumber, 2},
    {"_bcfbma_get_tree_prior_bcf", (DL_FUNC) &_bcfbma_get_tree_prior_bcf, 12},
    {"_bcfbma_start_tree_bcf", (DL_FUNC) &_bcfbma_start_tree_bcf, 2},
    {"_bcfbma_start_tree2_bcf", (DL_FUNC) &_bcfbma_start_tree2_bcf, 0},
    {"_bcfbma_start_matrix_bcf", (DL_FUNC) &_bcfbma_start_matrix_bcf, 1},
    {"_bcfbma_evaluate_model_occams_window_bcf", (DL_FUNC) &_bcfbma_evaluate_model_occams_window_bcf, 6},
    {"_bcfbma_evaluate_model_occams_window_exact_bcf", (DL_FUNC) &_bcfbma_evaluate_model_occams_window_exact_bcf, 7},
    {"_bcfbma_evaluate_model_OW_fusedlists_bcf", (DL_FUNC) &_bcfbma_evaluate_model_OW_fusedlists_bcf, 10},
    {"_bcfbma_evaluate_model_OW_fusedlists_exact_bcf", (DL_FUNC) &_bcfbma_evaluate_model_OW_fusedlists_exact_bcf, 11},
    {"_bcfbma_get_testdata_term_obs_bcf", (DL_FUNC) &_bcfbma_get_testdata_term_obs_bcf, 3},
    {"_bcfbma_get_initial_resids", (DL_FUNC) &_bcfbma_get_initial_resids, 6},
    {"_bcfbma_resize_bcf", (DL_FUNC) &_bcfbma_resize_bcf, 2},
    {"_bcfbma_resize_bigger_bcf", (DL_FUNC) &_bcfbma_resize_bigger_bcf, 2},
    {"_bcfbma_J_bcf", (DL_FUNC) &_bcfbma_J_bcf, 2},
    {"_bcfbma_mu_vector_bcf", (DL_FUNC) &_bcfbma_mu_vector_bcf, 2},
    {"_bcfbma_W_bcf", (DL_FUNC) &_bcfbma_W_bcf, 3},
    {"_bcfbma_W_tauround1_bcf", (DL_FUNC) &_bcfbma_W_tauround1_bcf, 3},
    {"_bcfbma_likelihood_function_exact_bcf", (DL_FUNC) &_bcfbma_likelihood_function_exact_bcf, 7},
    {"_bcfbma_sumtree_likelihood_function_bcf_bcf", (DL_FUNC) &_bcfbma_sumtree_likelihood_function_bcf_bcf, 11},
    {"_bcfbma_sumtree_likelihood_function_exact_bcf", (DL_FUNC) &_bcfbma_sumtree_likelihood_function_exact_bcf, 11},
    {"_bcfbma_sumtree_likelihood_tau_round1_bcf", (DL_FUNC) &_bcfbma_sumtree_likelihood_tau_round1_bcf, 9},
    {"_bcfbma_sumtree_likelihood_tau_round1_exact_bcf", (DL_FUNC) &_bcfbma_sumtree_likelihood_tau_round1_exact_bcf, 9},
    {"_bcfbma_get_best_split_mu_bcf", (DL_FUNC) &_bcfbma_get_best_split_mu_bcf, 26},
    {"_bcfbma_get_best_split_mu_update_bcf", (DL_FUNC) &_bcfbma_get_best_split_mu_update_bcf, 26},
    {"_bcfbma_get_best_split_tau_bcf", (DL_FUNC) &_bcfbma_get_best_split_tau_bcf, 35},
    {"_bcfbma_get_best_split_tau_update_bcf", (DL_FUNC) &_bcfbma_get_best_split_tau_update_bcf, 35},
    {"_bcfbma_get_best_split_tau_round1_bcf", (DL_FUNC) &_bcfbma_get_best_split_tau_round1_bcf, 41},
    {"_bcfbma_get_best_split_tau_round1_update_bcf", (DL_FUNC) &_bcfbma_get_best_split_tau_round1_update_bcf, 41},
    {"_bcfbma_get_best_split_sum_tau_bcf", (DL_FUNC) &_bcfbma_get_best_split_sum_tau_bcf, 43},
    {"_bcfbma_get_best_split_sum_tau_update_bcf", (DL_FUNC) &_bcfbma_get_best_split_sum_tau_update_bcf, 43},
    {"_bcfbma_get_best_split_sum_mu_bcf", (DL_FUNC) &_bcfbma_get_best_split_sum_mu_bcf, 43},
    {"_bcfbma_get_best_split_sum_mu_update_bcf", (DL_FUNC) &_bcfbma_get_best_split_sum_mu_update_bcf, 43},
    {"_bcfbma_update_mean_var_bcf", (DL_FUNC) &_bcfbma_update_mean_var_bcf, 4},
    {"_bcfbma_update_predictions_bcf", (DL_FUNC) &_bcfbma_update_predictions_bcf, 4},
    {"_bcfbma_subsetter_bcf", (DL_FUNC) &_bcfbma_subsetter_bcf, 2},
    {"_bcfbma_order_inc__bcf", (DL_FUNC) &_bcfbma_order_inc__bcf, 1},
    {"_bcfbma_min_which2_bcf", (DL_FUNC) &_bcfbma_min_which2_bcf, 4},
    {"_bcfbma_mll_meanvar2_bcf", (DL_FUNC) &_bcfbma_mll_meanvar2_bcf, 3},
    {"_bcfbma_PELT_meanvar_norm2_bcf", (DL_FUNC) &_bcfbma_PELT_meanvar_norm2_bcf, 2},
    {"_bcfbma_SS_bcf", (DL_FUNC) &_bcfbma_SS_bcf, 3},
    {"_bcfbma_gridCP_bcf", (DL_FUNC) &_bcfbma_gridCP_bcf, 3},
    {"_bcfbma_make_gridpoint_cpmat_mu_bcf", (DL_FUNC) &_bcfbma_make_gridpoint_cpmat_mu_bcf, 4},
    {"_bcfbma_make_gridpoint_cpmat_tau_bcf", (DL_FUNC) &_bcfbma_make_gridpoint_cpmat_tau_bcf, 5},
    {"_bcfbma_make_pelt_cpmat_mu_bcf", (DL_FUNC) &_bcfbma_make_pelt_cpmat_mu_bcf, 4},
    {"_bcfbma_make_pelt_cpmat_tau_bcf", (DL_FUNC) &_bcfbma_make_pelt_cpmat_tau_bcf, 5},
    {"_bcfbma_get_best_trees_mu_bcf", (DL_FUNC) &_bcfbma_get_best_trees_mu_bcf, 56},
    {"_bcfbma_get_best_trees_mu_bcf_2", (DL_FUNC) &_bcfbma_get_best_trees_mu_bcf_2, 57},
    {"_bcfbma_get_best_trees_sum_mu_bcf", (DL_FUNC) &_bcfbma_get_best_trees_sum_mu_bcf, 61},
    {"_bcfbma_get_best_trees_sum_mu_bcf_2", (DL_FUNC) &_bcfbma_get_best_trees_sum_mu_bcf_2, 62},
    {"_bcfbma_get_best_trees_tau_bcf", (DL_FUNC) &_bcfbma_get_best_trees_tau_bcf, 57},
    {"_bcfbma_get_best_trees_sum_tau_round1_bcf", (DL_FUNC) &_bcfbma_get_best_trees_sum_tau_round1_bcf, 59},
    {"_bcfbma_get_best_trees_sum_tau_bcf", (DL_FUNC) &_bcfbma_get_best_trees_sum_tau_bcf, 61},
    {"_bcfbma_get_best_trees_sum_tau_bcf_2", (DL_FUNC) &_bcfbma_get_best_trees_sum_tau_bcf_2, 62},
    {"_bcfbma_scale_response_bcf", (DL_FUNC) &_bcfbma_scale_response_bcf, 5},
    {"_bcfbma_get_original_bcf", (DL_FUNC) &_bcfbma_get_original_bcf, 5},
    {"_bcfbma_get_original_TE_bcf", (DL_FUNC) &_bcfbma_get_original_TE_bcf, 5},
    {"_bcfbma_get_original_TE_double_bcf", (DL_FUNC) &_bcfbma_get_original_TE_double_bcf, 5},
    {"_bcfbma_get_original_TE_arma_bcf", (DL_FUNC) &_bcfbma_get_original_TE_arma_bcf, 5},
    {"_bcfbma_get_termobs_test_data_all", (DL_FUNC) &_bcfbma_get_termobs_test_data_all, 2},
    {"_bcfbma_get_termobs_test_data_treated", (DL_FUNC) &_bcfbma_get_termobs_test_data_treated, 3},
    {"_bcfbma_get_termobs_testdata_overall_all", (DL_FUNC) &_bcfbma_get_termobs_testdata_overall_all, 2},
    {"_bcfbma_get_termobs_testdata_overall_treated", (DL_FUNC) &_bcfbma_get_termobs_testdata_overall_treated, 3},
    {"_bcfbma_get_J_test", (DL_FUNC) &_bcfbma_get_J_test, 3},
    {"_bcfbma_get_W_test", (DL_FUNC) &_bcfbma_get_W_test, 3},
    {"_bcfbma_preds_bcfbma_lin_alg_insamp", (DL_FUNC) &_bcfbma_preds_bcfbma_lin_alg_insamp, 16},
    {"_bcfbma_preds_bcfbma_lin_alg_outsamp", (DL_FUNC) &_bcfbma_preds_bcfbma_lin_alg_outsamp, 22},
    {"_bcfbma_BCF_BMA_sumLikelihood", (DL_FUNC) &_bcfbma_BCF_BMA_sumLikelihood, 52},
    {"_bcfbma_fuse_intvecs", (DL_FUNC) &_bcfbma_fuse_intvecs, 2},
    {"_bcfbma_fuse_numvecs", (DL_FUNC) &_bcfbma_fuse_numvecs, 2},
    {"_bcfbma_fuse_lists", (DL_FUNC) &_bcfbma_fuse_lists, 2},
    {"_bcfbma_fuse_listsof_intvecs", (DL_FUNC) &_bcfbma_fuse_listsof_intvecs, 2},
    {"_bcfbma_mmult1", (DL_FUNC) &_bcfbma_mmult1, 2},
    {"_bcfbma_BCF_BMA_sumLikelihood_add_mu_or_tau", (DL_FUNC) &_bcfbma_BCF_BMA_sumLikelihood_add_mu_or_tau, 53},
    {"_bcfbma_mean_vars_lin_alg_insamp_bcf", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_insamp_bcf, 16},
    {"_bcfbma_mean_vars_lin_alg_outsamp_bcf", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_outsamp_bcf, 22},
    {"_bcfbma_pred_ints_lin_alg_outsamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_outsamp_bcf, 24},
    {"_bcfbma_pred_ints_lin_alg_insamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_insamp_bcf, 18},
    {"_bcfbma_get_termobs_test_data_fields_bcf", (DL_FUNC) &_bcfbma_get_termobs_test_data_fields_bcf, 2},
    {"_bcfbma_pred_ints_lin_alg_fields_outsamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_fields_outsamp_bcf, 25},
    {"_bcfbma_pred_ints_lin_alg_fields_insamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_fields_insamp_bcf, 19},
    {"_bcfbma_pred_ints_lin_alg_fields_LDL_outsamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_fields_LDL_outsamp_bcf, 25},
    {"_bcfbma_pred_ints_lin_alg_fields_LDL_insamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_fields_LDL_insamp_bcf, 19},
    {"_bcfbma_mean_vars_lin_alg_insamp_par_bcf", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_insamp_par_bcf, 17},
    {"_bcfbma_mean_vars_lin_alg_outsamp_par_bcf", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_outsamp_par_bcf, 23},
    {"_bcfbma_mean_vars_lin_alg_insamp_par_cate", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_insamp_par_cate, 17},
    {"_bcfbma_mean_vars_lin_alg_outsamp_par_cate", (DL_FUNC) &_bcfbma_mean_vars_lin_alg_outsamp_par_cate, 23},
    {"_bcfbma_pred_ints_lin_alg_fields_LDL_insamp_cate", (DL_FUNC) &_bcfbma_pred_ints_lin_alg_fields_LDL_insamp_cate, 19},
    {"_bcfbma_mixt_eval_cdf", (DL_FUNC) &_bcfbma_mixt_eval_cdf, 6},
    {"_bcfbma_rootmixt", (DL_FUNC) &_bcfbma_rootmixt, 8},
    {"_bcfbma_pred_ints_exact_outsamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_exact_outsamp_bcf, 25},
    {"_bcfbma_pred_ints_exact_insamp_bcf", (DL_FUNC) &_bcfbma_pred_ints_exact_insamp_bcf, 19},
    {"_bcfbma_find_term_nodes_gs", (DL_FUNC) &_bcfbma_find_term_nodes_gs, 1},
    {"_bcfbma_find_term_obs_gs", (DL_FUNC) &_bcfbma_find_term_obs_gs, 2},
    {"_bcfbma_calc_rowsums", (DL_FUNC) &_bcfbma_calc_rowsums, 1},
    {"_bcfbma_calculate_resids", (DL_FUNC) &_bcfbma_calculate_resids, 2},
    {"_bcfbma_update_Gibbs_mean_var", (DL_FUNC) &_bcfbma_update_Gibbs_mean_var, 6},
    {"_bcfbma_update_sigma", (DL_FUNC) &_bcfbma_update_sigma, 4},
    {"_bcfbma_find_node_means", (DL_FUNC) &_bcfbma_find_node_means, 2},
    {"_bcfbma_get_tree_info", (DL_FUNC) &_bcfbma_get_tree_info, 3},
    {"_bcfbma_get_tree_info_tau", (DL_FUNC) &_bcfbma_get_tree_info_tau, 4},
    {"_bcfbma_remove_curr_col", (DL_FUNC) &_bcfbma_remove_curr_col, 2},
    {"_bcfbma_get_new_mean", (DL_FUNC) &_bcfbma_get_new_mean, 2},
    {"_bcfbma_update_predictions_gs", (DL_FUNC) &_bcfbma_update_predictions_gs, 5},
    {"_bcfbma_scale_response_gs", (DL_FUNC) &_bcfbma_scale_response_gs, 5},
    {"_bcfbma_get_original_gs", (DL_FUNC) &_bcfbma_get_original_gs, 5},
    {"_bcfbma_find_internal_nodes_gs", (DL_FUNC) &_bcfbma_find_internal_nodes_gs, 1},
    {"_bcfbma_get_tree_info_test_data", (DL_FUNC) &_bcfbma_get_tree_info_test_data, 2},
    {"_bcfbma_get_tree_info_test_data_tau", (DL_FUNC) &_bcfbma_get_tree_info_test_data_tau, 3},
    {"_bcfbma_get_tree_info_testdata_overall", (DL_FUNC) &_bcfbma_get_tree_info_testdata_overall, 3},
    {"_bcfbma_get_tree_info_testdata_overall_tau", (DL_FUNC) &_bcfbma_get_tree_info_testdata_overall_tau, 4},
    {"_bcfbma_gibbs_sampler", (DL_FUNC) &_bcfbma_gibbs_sampler, 25},
    {"_bcfbma_gibbs_sampler2", (DL_FUNC) &_bcfbma_gibbs_sampler2, 19},
    {"_bcfbma_gibbs_sampler_no_update", (DL_FUNC) &_bcfbma_gibbs_sampler_no_update, 25},
    {"_bcfbma_gibbs_sampler_no_update2", (DL_FUNC) &_bcfbma_gibbs_sampler_no_update2, 19},
    {"_bcfbma_gibbs_sampler_new_inits", (DL_FUNC) &_bcfbma_gibbs_sampler_new_inits, 27},
    {"_bcfbma_gibbs_sampler2_new_inits", (DL_FUNC) &_bcfbma_gibbs_sampler2_new_inits, 21},
    {"_bcfbma_gibbs_sampler_no_update_new_inits", (DL_FUNC) &_bcfbma_gibbs_sampler_no_update_new_inits, 27},
    {"_bcfbma_gibbs_sampler_no_update2_new_inits", (DL_FUNC) &_bcfbma_gibbs_sampler_no_update2_new_inits, 21},
    {NULL, NULL, 0}
};

RcppExport void R_init_bcfbma(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
